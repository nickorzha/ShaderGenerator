<Project>

  <PropertyGroup>
    <_SGReferencesResponsePath>$(IntermediateOutputPath)_sgreferences.txt</_SGReferencesResponsePath>
    <_SGSourcesResponsePath>$(IntermediateOutputPath)_sgsources.txt</_SGSourcesResponsePath>
    <_SGGeneratedFilesList>$(IntermediateOutputPath)_sggeneratedfiles.txt</_SGGeneratedFilesList>
  </PropertyGroup>

  <Target Name="GenerateShaderCode" AfterTargets="ResolveReferences">
    <Message Text="Generating shader code." />

    <Error Condition="'$(_SGExePath)' == ''" Text="The ShaderGen tool was not located or set." />
    <Error Condition="'$(ShaderOutputPath)' == ''" Text="ShaderOutputPath must be set." />

    <WriteLinesToFile Lines="@(ReferencePath)" File="$(_SGReferencesResponsePath)" Overwrite="true" />
    <WriteLinesToFile Lines="@(Compile)" File="$(_SGSourcesResponsePath)" Overwrite="true" />

    <PropertyGroup>
      <_SGArgs>$(_SGArgs) --ref " $(_SGReferencesResponsePath) "</_SGArgs>
      <_SGArgs>$(_SGArgs) --src " $(_SGSourcesResponsePath) "</_SGArgs>
      <_SGArgs>$(_SGArgs) --out " $(ShaderOutputPath) "</_SGArgs>
      <_SGArgs>$(_SGArgs) --genlist "$(_SGGeneratedFilesList)"</_SGArgs>
      <_SGArgs Condition="'$(ListAllShaderPaths)' == 'true'">$(_SGArgs) --listall</_SGArgs>
      <_SGArgs Condition="'$(ShaderProcessorAssembly)' != ''">$(_SGArgs) --processor "$(ShaderProcessorAssembly)"</_SGArgs>
      <_SGArgs Condition="'$(ShaderProcessorArgs)' != ''">$(_SGArgs) --processorargs "$(ShaderProcessorArgs)"</_SGArgs>
    </PropertyGroup>

    <Delete Files="$(_SGGeneratedFilesList)" Condition="Exists($(_SGGeneratedFilesList))" ContinueOnError="true" />

    <PropertyGroup>
      <_SGContinueOnError>false</_SGContinueOnError>
      <_SGContinueOnError Condition="'$(DesignTimeBuild)' == 'true'">true</_SGContinueOnError>
    </PropertyGroup>

    <Exec Command="dotnet $(_SGExePath) $(_SGArgs)"
          WorkingDirectory="$(MSBuildProjectDirectory)"
          StandardOutputImportance="high"
          ContinueOnError="$(_SGContinueOnError)" />

    <ReadLinesFromFile
      Condition="Exists($(_SGGeneratedFilesList))"
      File="$(_SGGeneratedFilesList)"
      ContinueOnError="$(_SGContinueOnError)">
      <Output
          TaskParameter="Lines"
          ItemName="GeneratedShader" />
    </ReadLinesFromFile>

    <CallTarget Condition="'@(ShaderGenPostTargets)' != ''"
                Targets="@(ShaderGenPostTargets)"
                ContinueOnError="$(_SGContinueOnError)" />

  </Target>

  <Target Name="IncludeGeneratedShaderContent"
    AfterTargets="AssignTargetPaths"
    Condition="'$(ShaderContentIncludePath)' != ''">
    <ItemGroup>
      <ContentWithTargetPath Include="@(GeneratedShader)">
        <TargetPath>$(ShaderContentIncludePath)\%(FileName)%(Extension)</TargetPath>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </ContentWithTargetPath>
    </ItemGroup>
  </Target>

</Project>